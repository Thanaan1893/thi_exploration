<?xml version="1.0"?>

<launch>

  <!-- args: Pass arguments to node; default: arg value can be overwritten-->

  <!--The frame name when publishing the scanmatcher to map transform as described in the preceding parameter-->
  <arg name="tf_map_scanmatch_transform_frame_name" default="scanmatcher_frame"/>

   <!--The name of the base frame of the robot. used for localization/transformation of laser scan data-->
  <arg name="base_frame" default="robot_0"/>
  
  <!--The name of the odom frame-->
  <arg name="odom_frame" default="robot_0"/>
  
  <!--Determine if the map->odom transform should be published by the system-->
  <arg name="pub_map_odom_transform" default="true"/>
  
  <!--The queue size of the scan subscriber -->
  <arg name="scan_subscriber_queue_size" default="5"/>
  
  <!-- The laser scan used by the SLAM system.-->
  <arg name="scan_topic" default="/robot0/laser_0"/>

  <!-- The size [number of cells per axis] of the map-->
  <arg name="map_size" default="50"/>

  <!-- node:-->
  <!-- pkg: Package of Node-->
  <!-- type: Node type. There must be a corresponding executable with the same name-->
  <!-- respawn: Restart the node automatically if it quits-->
  <!-- name: Name of Node-->
  <!-- output: If 'screen', stdout/stderr from the node will be sent to the screen-->
  <!--Parameter will be setted on the Parameter Server-->
  <node pkg="hector_mapping" type="hector_mapping" name="hector_mapping" output="screen">
    
    <!-- Frame names -->
    <param name="map_frame"  value="map_from_gmapping" />
    <param name="base_frame" value="$(arg base_frame)" />
    <param name="odom_frame" value="$(arg odom_frame)" />
    
    <!-- Tf use -->
    <param name="use_tf_scan_transformation" value="false"/>
    <param name="use_tf_pose_start_estimate" value="false"/>
    <param name="pub_map_odom_transform" value="$(arg pub_map_odom_transform)"/>
    
    <!-- Map size / start point -->

    <!-- The map resolution [m]. This is the length of a grid cell edge -->
    <param name="map_resolution" value="0.050"/>

    <param name="map_size" value="$(arg map_size)"/>
    
    <!-- Location of the origin [0.0, 1.0] of the /map frame on the x/y axis relative to the grid map. 0.5 is in the middle.-->
    <param name="map_start_x" value="0.5"/>
    <param name="map_start_y" value="0.5" />
    
    <!-- The number of map multi-resolution grid levels.-->
    <param name="map_multi_res_levels" value="2" />
    
    <!-- Map update parameters -->

    <!--The map update modifier for updates of free/occupied cells in the range [0.0, 1.0]. A value of 0.5 means no change.-->
    <param name="update_factor_free" value="0.4"/>
    <param name="update_factor_occupied" value="0.9" />

    <!-- Threshold for performing map updates [m/rad]. The platform has to travel this far in meters/angular or experience an angular/meter change as described by      map_update_angle/distance_thresh parameter since the last update before a map update happens.-->    
    <param name="map_update_distance_thresh" value="0.4"/>
    <param name="map_update_angle_thresh" value="0.06" />

   <!--The minimum/maximum height [m] relative to the laser scanner frame for laser scan endpoints to be used by the system. -->
    <param name="laser_z_min_value" value = "-1.0" />
    <param name="laser_z_max_value" value = "1.0" />
    
    <!-- Advertising config --> 
    <param name="advertise_map_service" value="true"/>
    
    <param name="scan_subscriber_queue_size" value="$(arg scan_subscriber_queue_size)"/>
    <param name="scan_topic" value="$(arg scan_topic)"/>
    
    <!-- Debug parameters -->
    
    <param name="output_timing" value="false"/>
    <param name="pub_drawings" value="true"/>
    <param name="pub_debug_output" value="true"/>
    
    <param name="tf_map_scanmatch_transform_frame_name" value="$(arg tf_map_scanmatch_transform_frame_name)" />

    <remap from="map" to="map_from_gmapping"/>
  </node>
</launch>
